name: release-on-tag

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g. v0.1.1)'
        required: true

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write  # needed to create releases & upload assets
    steps:
      # Decide which tag to build
      - name: Resolve tag
        id: tag
        shell: bash
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            echo "value=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "value=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          fi

      # Build the exact tag, not HEAD
      - name: Checkout ${{ steps.tag.outputs.value }}
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.tag.outputs.value }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path .\requirements.txt) {
            pip install -r .\requirements.txt
          } else {
            pip install pyinstaller
          }

      - name: Build with PyInstaller
        shell: pwsh
        run: |
          if (Test-Path .\DesktopTileLauncher.spec) {
            pyinstaller .\DesktopTileLauncher.spec
          } else {
            pyinstaller --onefile .\DesktopTileLauncher.py --name DesktopTileLauncher
          }

      - name: List dist (debug)
        shell: pwsh
        run: |
          if (Test-Path .\dist) {
            Get-ChildItem -Recurse -File .\dist | Format-Table FullName, Length
          } else {
            Write-Error "dist/ not found"
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: DesktopTileLauncher-${{ steps.tag.outputs.value }}
          path: |
            dist/**/*.exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.value }}
          name: ${{ steps.tag.outputs.value }}
          generate_release_notes: true
          files: |
            dist/**/*.exe
          fail_on_unmatched_files: true
