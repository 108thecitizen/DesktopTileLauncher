name: build-windows-exe

on:
  push:
    branches: [ master ]   # you're on master today
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # get full history so tags are reachable

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install build deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path -Path requirements.txt) {
            pip install -r requirements.txt
          } else {
            pip install pyinstaller
          }

      - name: Generate version_info.txt
        shell: pwsh
        run: |
          # Ensure tags are present in this shallow checkout
          git fetch --force --tags 2>$null

          # Try latest tag; fall back if none reachable
          $tag = git describe --tags --abbrev=0 2>$null
          if (-not $tag) { $tag = 'v0.0.0.0' }

          # Prevent a non-zero exit from 'git describe' breaking the step
          $global:LASTEXITCODE = 0

          $ver = $tag -replace '^v',''
          $parts = $ver.Split('.')
          while ($parts.Count -lt 4) { $parts += '0' }
          $tuple = ($parts | ForEach-Object { [int]$_ }) -join ', '

          $lines = @(
            'VSVersionInfo(',
            '  ffi=FixedFileInfo(',
            "    filevers=($tuple),",
            "    prodvers=($tuple),",
            '    mask=0x3f, flags=0x0, OS=0x40004, fileType=0x1, subType=0x0, date=(0, 0)',
            '  ),',
            "  kids=[StringFileInfo([StringTable('040904B0', [",
            "    StringStruct('FileDescription', 'DesktopTileLauncher'),",
            "    StringStruct('FileVersion', '$ver'),",
            "    StringStruct('ProductName', 'DesktopTileLauncher'),",
            "    StringStruct('ProductVersion', '$ver')",
            "  ])]), VarFileInfo([VarStruct('Translation', [1033, 1200])])]",
            ')'
          )
          $lines -join "`r`n" | Set-Content -Path version_info.txt -Encoding ascii
          '--- version_info.txt ---'
          Get-Content version_info.txt

      - name: Build with PyInstaller
        shell: pwsh
        run: |
          if (Test-Path .\DesktopTileLauncher.spec) {
            pyinstaller .\DesktopTileLauncher.spec
          } else {
            pyinstaller --onefile .\tile_launcher.py --name DesktopTileLauncher --icon DesktopTileLauncher.ico --version-file version_info.txt
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: DesktopTileLauncher-${{ github.ref_name }}-${{ github.run_number }}
          path: |
            dist/**/DesktopTileLauncher.exe
            dist/**/DesktopTileLauncher-*.exe
